Документація до бібліотеки swypiEmotionText(Python)
Опис
Бібліотека swypiEmotionText призначена для аналізу текстів і визначення емоцій, що містяться в них. Вона надає інструменти для оцінки настроїв і емоцій у введених користувачем текстах. Бібліотека може визначати позитивні, негативні та нейтральні емоції.

Встановлення
Щоб встановити бібліотеку з GitHub

*bash
pip install https://github.com/fleeeks/swypiEmotiontext/releases/download/0.1/swypiEmotionText.tar.gz
це буде 0.1 версія для того щоб завантажити іншу робіть:
1.перевірьте Github realise які є внші версії
наприклад 1.0
вам треьа в посиланні де /download/(тут вказати версію)

Якщо ви хочете встановити бібліотеку з локального файлу .gz, спершу переконайтеся, що у вас є файл бібліотеки у форматі .gz. Потім скористайтеся командою:

*bash
pip install /path/to/swypiEmotionText.gz
Де /path/to/swypiEmotionText.gz — це шлях до файлу на вашому комп'ютері або пристрої.

Використання
Імпорт бібліотеки

Щоб використати бібліотеку в Python-коді, імпортуйте її наступним чином:

*python
from swypiEmotionText.text_check import text_check
Функція text_check

Функція text_check аналізує текст і визначає емоцію, що переважає в ньому. Вона також повертає оцінку емоції за шкалою від -1 до 1.

Сигнатура функції:

*python
swypiEmotionText.text_check(text: str, emotion_check: bool = False) -> dict
Параметри:

text (str): Текст, який потрібно проаналізувати.
emotion_check (bool, optional): Якщо значення True, бібліотека перевірятиме текст на емоції. За замовчуванням — False.
Повертає:

Функція повертає словник з результатами аналізу тексту. Словник може містити такі ключі:

emotion: Загальна емоція, яка відповідає аналізу (наприклад, "позитивна", "негативна").
score: Оцінка емоції за шкалою від -1 до 1 (де -1 — це сильна негативна емоція, а 1 — сильна позитивна).
Приклад використання:

*python
from swypiEmotionText.text_check import text_check

# Текст для аналізу
input_text = "I am so happy today!"

# Перевірка на емоції без параметра emotion_check
result = text_check(input_text)

# Виведення результатів
print(result)

Приклад виводу:

*json
{
  "emotion": "positive",
  "score": 0.95
}
Структура файлів
Бібліотека включає такі основні файли:

__init__.py: Ініціалізація пакету для імпорту бібліотеки в Python.
text_check.py: Основний файл, що містить функцію для перевірки тексту та визначення емоцій.
errors.py: Містить функції для обробки помилок, що можуть виникнути під час виконання бібліотеки.

Бібліотека обробляє різні помилки, наприклад:

Якщо текст не може бути проаналізований, буде повернута помилка, наприклад, "Invalid input".
Тестування
Після завантаження бібліотеки ви можете протестувати її, використовуючи надані приклади або створюючи власні тести. Для цього використовуйте функцію text_check для перевірки різних текстів на емоційний зміст.
також бібліотеку можна використовувати не лише для прикладу а в других сферах, в других python-скриптах. Наприклад можна використовувати в іграх, та других пайтон скриптів!

  бібліотека не стоїть на місці!
  бібліотека буде завжди оновлюватися розробником! Навіть якщо довго не оновлюється це не ознака того що вона померла, на це є певні причини!

    by Fleeks
    stasyt024@gmail.com
    https://t.me/fleeks_admin
